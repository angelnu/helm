Application URL:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  RUN:
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "ttrss.fullname" . }})
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo "http://$NODE_IP:$NODE_PORT"
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "ttrss.fullname" . }}'
  RUN:
    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "ttrss.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
    echo "http://$SERVICE_IP:{{ include "ttrss.servicePort" . }}"
{{- else if contains "ClusterIP" .Values.service.type }}
  RUN:
    kubectl port-forward --namespace {{ .Release.Namespace }} service/{{ include "ttrss.fullname" . }} {{ include "ttrss.servicePort" . }}:{{ include "ttrss.servicePort" . }}
  http{{ if $.Values.internal_self_signed }}s{{ end }}://localhost:{{ include "ttrss.servicePort" . }}
{{- end }}
Default User: admin
Default Password: password
